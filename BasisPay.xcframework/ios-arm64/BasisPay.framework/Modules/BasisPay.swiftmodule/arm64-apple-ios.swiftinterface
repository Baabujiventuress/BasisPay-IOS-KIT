// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BasisPay
@_exported import BasisPay
import Foundation
import Swift
import UIKit
import WebKit
public protocol PaymentGatewayDelegate {
  func onPaymentSucess(orderId: Swift.String, description: Swift.String)
  func onPaymentFailure(description: Swift.String)
}
public struct PaymentDefaults {
  public init(apiKey: Swift.String, saltKey: Swift.String, returnUrl: Swift.String, endPoint: BasisPay.UrlEndpoint)
}
public enum UrlEndpoint : Swift.String {
  case Live
  case Testing
  public typealias RawValue = Swift.String
  public init?(rawValue: Swift.String)
  public var rawValue: Swift.String {
    get
  }
}
@objc open class PaymentGatewayController : UIKit.UIViewController {
  @objc open var isResponseDataAvailable: Swift.Bool
  public var paymentDefaults: BasisPay.PaymentDefaults!
  public var delegate: BasisPay.PaymentGatewayDelegate?
  @objc dynamic public init()
  @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @objc override dynamic open func viewDidLoad()
  @objc override dynamic open func didReceiveMemoryWarning()
  @objc open func setInputDictionary(inputDictionary: Foundation.NSDictionary)
  @objc open func isResponseAvailable() -> Swift.Bool
  @objc open func getResponseData() -> Foundation.NSDictionary
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
}
extension PaymentGatewayController : WebKit.WKNavigationDelegate {
  @objc dynamic public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationAction: WebKit.WKNavigationAction, decisionHandler: @escaping (WebKit.WKNavigationActionPolicy) -> Swift.Void)
  @objc dynamic public func webView(_ webView: WebKit.WKWebView, didFinish navigation: WebKit.WKNavigation!)
}
extension BasisPay.UrlEndpoint : Swift.Equatable {}
extension BasisPay.UrlEndpoint : Swift.Hashable {}
extension BasisPay.UrlEndpoint : Swift.RawRepresentable {}
